name: Construction et Rapports de Qualité pour API Spring Boot

on:
  push:
    branches:
      - 'recette'
      - 'production'
  workflow_dispatch:

jobs:
  build:
    name: Construction du Projet
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code source depuis le dépôt
      - name: Récupération du code
        uses: actions/checkout@v3

      # Étape 2 : Configurer le JDK 21 pour la construction du projet
      - name: Configuration de JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Étape 3 : Mise en cache des dépendances Maven pour accélérer les builds
      - name: Mise en cache des dépendances Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Étape 4 : Construction du projet sans exécuter les tests
      - name: Construction du projet
        run: mvn clean install -DskipTests

    outputs:
      maven-cache-key: ${{ steps.cache.outputs.cache-hit }}

  analyze:
    name: Analyse du Code et Rapports de Qualité
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Étape 1 : Récupérer le code source depuis le dépôt
      - name: Récupération du code
        uses: actions/checkout@v3

      # Étape 2 : Configurer le JDK 21 pour les analyses
      - name: Configuration de JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # Étape 3 : Mise en cache des dépendances Maven pour l'analyse
      - name: Mise en cache des dépendances Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ needs.build.outputs.maven-cache-key }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Étape 4 : Exécuter les tests avec génération du rapport de couverture
      - name: Exécution des tests avec couverture
        run: mvn test jacoco:report

      # Étape 5 : Analyse statique avec SpotBugs
      - name: Analyse avec SpotBugs
        run: mvn spotbugs:spotbugs

      # Étape 6 : Publication des résultats de SpotBugs
      - name: Publication du rapport SpotBugs
        uses: actions/upload-artifact@v3
        with:
          name: spotbugs-report
          path: target/spotbugs.xml
